generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  role      Role     @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  orders Order[]

  @@map("users")
}

model Customer {
  id          String           @id @default(cuid())
  name        String
  email       String           @unique
  phone       String?
  address     String?
  status      CustomerStatus   @default(ACTIVE)
  totalSpent  Float            @default(0)
  lastOrderAt DateTime?
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt
  orders      Order[]

  @@map("customers")
}
model Product {
  id          String   @id @default(cuid())
  name        String
  description String?
  price       Float
  stock       Int      @default(0)
  category    String
  status      ProductStatus @default(ACTIVE)
  imageUrl    String?
  sku         String   @unique
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  orderItems OrderItem[]

  @@map("products")
}

model Order {
  id         String      @id @default(cuid())
  orderNumber String     @unique
  status     OrderStatus @default(PENDING)
  total      Float
  subtotal   Float
  tax        Float       @default(0)
  shipping   Float       @default(0)
  notes      String?
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt

  customerId String
  customer   Customer @relation(fields: [customerId], references: [id])
  
  userId     String?
  user       User?   @relation(fields: [userId], references: [id])

  items      OrderItem[]

  @@map("orders")
}

model OrderItem {
  id        String @id @default(cuid())
  quantity  Int
  price     Float
  total     Float

  orderId   String
  order     Order   @relation(fields: [orderId], references: [id], onDelete: Cascade)
  
  productId String
  product   Product @relation(fields: [productId], references: [id])

  @@map("order_items")
}

enum Role {
  USER
  ADMIN
  MANAGER
}

enum CustomerStatus {
  ACTIVE
  INACTIVE
  BLOCKED
}

enum ProductStatus {
  ACTIVE
  INACTIVE
  OUT_OF_STOCK
}

enum OrderStatus {
  PENDING
  PROCESSING
  SHIPPED
  DELIVERED
  CANCELLED
  REFUNDED
}
